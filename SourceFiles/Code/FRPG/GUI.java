/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Code.FRPG;

import edu.cmu.ri.createlab.terk.robot.finch.Finch;
import java.awt.Color;
import java.util.Random;

/**
 *
 * @author gryan
 */
public class GUI extends javax.swing.JFrame {

    public static Player myPlayer = new Tank();
    Dungeon dungeon = new Dungeon();
    Room r = new Room();
    boolean gameRunning = false;
    public static Finch combatFinch = new Finch();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        combatPane = new javax.swing.JTextArea();
        logScrollPane = new javax.swing.JScrollPane();
        logPane = new javax.swing.JTextArea();
        spritePanel = new javax.swing.JPanel();
        invTab = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        RPGMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FINCH RPG");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(91, 135, 49));
        setFont(new java.awt.Font("Microsoft Tai Le", 0, 18)); // NOI18N
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        combatPane.setColumns(20);
        combatPane.setRows(5);
        jScrollPane1.setViewportView(combatPane);

        logPane.setColumns(20);
        logPane.setRows(5);
        logScrollPane.setViewportView(logPane);

        javax.swing.GroupLayout spritePanelLayout = new javax.swing.GroupLayout(spritePanel);
        spritePanel.setLayout(spritePanelLayout);
        spritePanelLayout.setHorizontalGroup(
            spritePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );
        spritePanelLayout.setVerticalGroup(
            spritePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        invTab.addTab("Inv", jScrollPane2);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        invTab.addTab("Stats", jScrollPane3);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        invTab.addTab("Equips", jScrollPane4);

        jMenu1.setText("File");

        jMenuItem1.setText("Quit");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        RPGMenu.add(jMenu1);

        jMenu2.setText("Edit");
        RPGMenu.add(jMenu2);

        setJMenuBar(RPGMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invTab)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spritePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(logScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(invTab, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(spritePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void introDialogue() {
        
    }

    private void battle(Player p, Room r) {

        Monster m = r.getMon(1);

        Thread thread = new Thread();
        thread.start();
        int dmg = 0;
        try {

            while (gameRunning = true && m.getHealth() > 0 && p.getHealth() > 0) {
                if (SkillBook.sequence.isEmpty()) {
                    Random rnd = new Random();
                    int critInt = rnd.nextInt(100) + 1;
                    int dodgeInt = rnd.nextInt(100) + 1;
                    if (critInt < 5) {
                        dmg = SkillBook.getSkill() * 2;
                        combatFinch.setLED(Color.blue, 400);
                    } else if (dodgeInt < 5) {
                        dmg = 0;
                    } else {
                        dmg = SkillBook.getSkill();
                    }
                }
                m.setHealth(m.getHealth() - dmg);
                p.setHealth(p.getHealth() - m.getCombatPower());
                combatPane.setText(m.toString() + "\n" + p.toString());
                logPane.update(logPane.getGraphics());
                combatPane.update(combatPane.getGraphics());
                if (m.getHealth() <= 0) {
                    myPlayer.setEXP(myPlayer.getEXP()+ m.getEXP());
                    m = r.getMon(2);
                }
                if (m.getHealth() <= 0) {
                    myPlayer.setEXP(myPlayer.getEXP()+ m.getEXP());
                    m = r.getMon(3);
                }
                if (m.getHealth() <= 0) {
                    myPlayer.setEXP(myPlayer.getEXP()+ m.getEXP());
                    m = r.getMon(4);
                }
                if (m.getHealth() <= 0) {
                    myPlayer.setEXP(myPlayer.getEXP()+ m.getEXP());
                    m = r.getMon(5);
                }
                if (m.getHealth() <= 0) {
                    myPlayer.setEXP(myPlayer.getEXP()+ m.getEXP());
                }
            }

        } catch (Exception ex) {
            System.out.println("You fool");
        }

    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // introDialogue();
        gameRunning = true;
        Room r = Dungeon.getRoom(1);
        Player p = myPlayer;
        combatFinch.setLED(Color.YELLOW);
        //battle(p, r);
        Obelisk o = new Obelisk(100);
        o.getOb();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar RPGMenu;
    private javax.swing.JTextArea combatPane;
    private javax.swing.JTabbedPane invTab;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea logPane;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JPanel spritePanel;
    // End of variables declaration//GEN-END:variables
}
